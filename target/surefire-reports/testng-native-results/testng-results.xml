<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="25" passed="25">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="26223" started-at="2018-08-21T20:29:18Z" finished-at="2018-08-21T20:29:44Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="26223" started-at="2018-08-21T20:29:18Z" finished-at="2018-08-21T20:29:44Z">
      <class name="testRest.TestSetting_Root">
        <test-method status="PASS" signature="testDetachRoot()[pri:0, instance:testRest.TestSetting_Root@327471b5]" name="testDetachRoot" duration-ms="779" started-at="2018-08-21T20:29:42Z" finished-at="2018-08-21T20:29:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDetachRoot -->
        <test-method status="PASS" signature="testWithRoot()[pri:0, instance:testRest.TestSetting_Root@327471b5]" name="testWithRoot" duration-ms="575" started-at="2018-08-21T20:29:43Z" finished-at="2018-08-21T20:29:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithRoot -->
        <test-method status="PASS" signature="testWithoutRoot()[pri:0, instance:testRest.TestSetting_Root@327471b5]" name="testWithoutRoot" duration-ms="478" started-at="2018-08-21T20:29:44Z" finished-at="2018-08-21T20:29:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithoutRoot -->
      </class> <!-- testRest.TestSetting_Root -->
      <class name="testRest.Test3_SchemaCheck">
        <test-method status="PASS" signature="testContentType()[pri:0, instance:testRest.Test3_SchemaCheck@2d554825]" name="testContentType" duration-ms="570" started-at="2018-08-21T20:29:27Z" finished-at="2018-08-21T20:29:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContentType -->
        <test-method status="PASS" signature="testSchema()[pri:0, instance:testRest.Test3_SchemaCheck@2d554825]" name="testSchema" duration-ms="832" started-at="2018-08-21T20:29:28Z" finished-at="2018-08-21T20:29:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSchema -->
      </class> <!-- testRest.Test3_SchemaCheck -->
      <class name="testRest.Test1_BasicFeaturesForXML">
        <test-method status="PASS" signature="testCompleteTextInOneGo()[pri:0, instance:testRest.Test1_BasicFeaturesForXML@77b52d12]" name="testCompleteTextInOneGo" duration-ms="1194" started-at="2018-08-21T20:29:23Z" finished-at="2018-08-21T20:29:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompleteTextInOneGo -->
        <test-method status="PASS" signature="testMultipleContent()[pri:0, instance:testRest.Test1_BasicFeaturesForXML@77b52d12]" name="testMultipleContent" duration-ms="919" started-at="2018-08-21T20:29:24Z" finished-at="2018-08-21T20:29:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleContent -->
        <test-method status="PASS" signature="testSingleContent()[pri:0, instance:testRest.Test1_BasicFeaturesForXML@77b52d12]" name="testSingleContent" duration-ms="862" started-at="2018-08-21T20:29:25Z" finished-at="2018-08-21T20:29:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleContent -->
        <test-method status="PASS" signature="testUsingXpath1()[pri:0, instance:testRest.Test1_BasicFeaturesForXML@77b52d12]" name="testUsingXpath1" duration-ms="968" started-at="2018-08-21T20:29:26Z" finished-at="2018-08-21T20:29:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsingXpath1 -->
        <test-method status="PASS" signature="testUsingXpath2()[pri:0, instance:testRest.Test1_BasicFeaturesForXML@77b52d12]" name="testUsingXpath2" duration-ms="884" started-at="2018-08-21T20:29:27Z" finished-at="2018-08-21T20:29:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsingXpath2 -->
      </class> <!-- testRest.Test1_BasicFeaturesForXML -->
      <class name="testRest.TestPostRequest">
        <test-method status="PASS" signature="testPostReq()[pri:0, instance:testRest.TestPostRequest@3567135c]" name="testPostReq" duration-ms="701" started-at="2018-08-21T20:29:41Z" finished-at="2018-08-21T20:29:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostReq -->
      </class> <!-- testRest.TestPostRequest -->
      <class name="testRest.Test6_GroovyFeatures">
        <test-method status="PASS" signature="testGetResponseAsList()[pri:0, instance:testRest.Test6_GroovyFeatures@6be46e8f]" name="testGetResponseAsList" duration-ms="564" started-at="2018-08-21T20:29:39Z" finished-at="2018-08-21T20:29:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResponseAsList -->
        <test-method status="PASS" signature="testLengthOfResponse()[pri:0, instance:testRest.Test6_GroovyFeatures@6be46e8f]" name="testLengthOfResponse" duration-ms="1423" started-at="2018-08-21T20:29:39Z" finished-at="2018-08-21T20:29:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLengthOfResponse -->
        <test-method status="PASS" signature="testPreseneceOfElements()[pri:0, instance:testRest.Test6_GroovyFeatures@6be46e8f]" name="testPreseneceOfElements" duration-ms="848" started-at="2018-08-21T20:29:41Z" finished-at="2018-08-21T20:29:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreseneceOfElements -->
      </class> <!-- testRest.Test6_GroovyFeatures -->
      <class name="testRest.Test1_BasicFeatures">
        <test-method status="PASS" signature="testEqualToFunction()[pri:0, instance:testRest.Test1_BasicFeatures@614c5515]" name="testEqualToFunction" duration-ms="2019" started-at="2018-08-21T20:29:18Z" finished-at="2018-08-21T20:29:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualToFunction -->
        <test-method status="PASS" signature="testFeatureForReadability()[pri:0, instance:testRest.Test1_BasicFeatures@614c5515]" name="testFeatureForReadability" duration-ms="515" started-at="2018-08-21T20:29:20Z" finished-at="2018-08-21T20:29:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFeatureForReadability -->
        <test-method status="PASS" signature="testHasItemFunction()[pri:0, instance:testRest.Test1_BasicFeatures@614c5515]" name="testHasItemFunction" duration-ms="984" started-at="2018-08-21T20:29:20Z" finished-at="2018-08-21T20:29:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasItemFunction -->
        <test-method status="PASS" signature="testLogging()[pri:0, instance:testRest.Test1_BasicFeatures@614c5515]" name="testLogging" duration-ms="500" started-at="2018-08-21T20:29:21Z" finished-at="2018-08-21T20:29:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogging -->
        <test-method status="PASS" signature="testParametersAndHeaders()[pri:0, instance:testRest.Test1_BasicFeatures@614c5515]" name="testParametersAndHeaders" duration-ms="523" started-at="2018-08-21T20:29:22Z" finished-at="2018-08-21T20:29:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParametersAndHeaders -->
        <test-method status="PASS" signature="testStatusCode()[pri:0, instance:testRest.Test1_BasicFeatures@614c5515]" name="testStatusCode" duration-ms="247" started-at="2018-08-21T20:29:22Z" finished-at="2018-08-21T20:29:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatusCode -->
      </class> <!-- testRest.Test1_BasicFeatures -->
      <class name="testRest.Test5_ResponseInDiffWays">
        <test-method status="PASS" signature="testExtractDetailsUsingPath()[pri:0, instance:testRest.Test5_ResponseInDiffWays@68837a77]" name="testExtractDetailsUsingPath" duration-ms="2320" started-at="2018-08-21T20:29:29Z" finished-at="2018-08-21T20:29:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractDetailsUsingPath -->
        <test-method status="PASS" signature="testExtractPathInOneline()[pri:0, instance:testRest.Test5_ResponseInDiffWays@68837a77]" name="testExtractPathInOneline" duration-ms="5509" started-at="2018-08-21T20:29:31Z" finished-at="2018-08-21T20:29:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractPathInOneline -->
        <test-method status="PASS" signature="testExtractUsingResponse()[pri:0, instance:testRest.Test5_ResponseInDiffWays@68837a77]" name="testExtractUsingResponse" duration-ms="570" started-at="2018-08-21T20:29:37Z" finished-at="2018-08-21T20:29:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractUsingResponse -->
        <test-method status="PASS" signature="testGetResponseAsInputStream()[pri:0, instance:testRest.Test5_ResponseInDiffWays@68837a77]" name="testGetResponseAsInputStream" duration-ms="905" started-at="2018-08-21T20:29:37Z" finished-at="2018-08-21T20:29:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResponseAsInputStream -->
        <test-method status="PASS" signature="testGetResponseAsString()[pri:0, instance:testRest.Test5_ResponseInDiffWays@68837a77]" name="testGetResponseAsString" duration-ms="485" started-at="2018-08-21T20:29:38Z" finished-at="2018-08-21T20:29:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResponseAsString -->
      </class> <!-- testRest.Test5_ResponseInDiffWays -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
